# -*- coding: utf-8 -*-
"""final_dataset_generation_miniP.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11-yORdFR9JEcz6LMWmPLoOO3A2aYOpQE
"""

from PIL import Image
import os

def merge_images(folder1, folder2, output_folder):
    # Ensure the output folder exists
    os.makedirs(output_folder, exist_ok=True)

    # Get a list of image names from the first folder (assuming both folders have the same set of images)
    images = os.listdir(folder1)
    images.sort()  # Ensure the order is correct

    # Iterate through each image
    for image_name in images:
        # Construct the full path to the images in both folders
        img_path1 = os.path.join(folder1, image_name)
        img_path2 = os.path.join(folder2, image_name)

        if os.path.isfile(img_path1) and os.path.isfile(img_path2):
            # Open the images
            img1 = Image.open(img_path1)
            img2 = Image.open(img_path2)

            # Create a new blank image with double width
            new_img = Image.new('RGB', (1200, 600))

            # Paste the two images into this blank image
            new_img.paste(img2, (0, 0))  # img2 goes on the left
            new_img.paste(img1, (600, 0))  # img1 goes on the right
            # new_img.paste(img1, (0, 0))
            # new_img.paste(img2, (600, 0))

            # Save the new image
            new_img.save(os.path.join(output_folder, image_name))

# Usage example
merge_images('/content/drive/MyDrive/grayscale_with_buildings', '/content/drive/MyDrive/without_buildings', '/content/drive/MyDrive/dataset_final')

import os
import shutil

# Path to the folder from which you want to delete files
folder_path = '/content/drive/MyDrive/dataset_final'

# Check if the path is a directory
if os.path.isdir(folder_path):
    # List all files and directories in the folder
    for filename in os.listdir(folder_path):
        file_path = os.path.join(folder_path, filename)
        try:
            if os.path.isfile(file_path) or os.path.islink(file_path):
                os.unlink(file_path)  # Remove file or link
            elif os.path.isdir(file_path):
                shutil.rmtree(file_path)  # Remove directory and all its contents
        except Exception as e:
            print(f'Failed to delete {file_path}. Reason: {e}')
    print("All files and folders within the directory have been deleted.")
else:
    print(f"The provided path: {folder_path} is not a directory.")